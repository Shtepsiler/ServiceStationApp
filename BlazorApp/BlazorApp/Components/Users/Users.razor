@page "/Users"
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorApp.Components.Account
@using BlazorApp.Extensions.ViewModels.IdentityVMs
@using BlazorApp.Services.Interfaces
@inject IUserService UserService
@inject IdentityRedirectManager RedirectManager
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<h3>Користувачі</h3>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <EditForm Model="@serchUserForm" FormName="find-Users" OnValidSubmit="FindUsers" Context="editContext" Enhance>
                        <div class="hstack gap-2">       
                            <label class="label-control">Name</label>
                            <InputText @bind-Value="serchUserForm.UserName" class="form-control"></InputText>
                            <label class="label-control">Role</label>
                            <InputSelect @bind-Value="serchUserForm.Role" class="form-control">
                                <option value="">All</option>
                                @foreach (var role in roles)
                                {
                                    <option value="@role">@role</option>
                                }
                            </InputSelect>
                            <button type="submit" class="btn btn-primary">Find Users</button>
                        </div>
                    </EditForm>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <QuickGrid Items="@UsersQueryble" class="table table-striped">
                            <PropertyColumn Property="@(p=>p.UserName)" Title="Ім'я'" Sortable="true"></PropertyColumn>
                            <PropertyColumn Property="@(p=>p.PhoneNumber)" Title="Номер телефону" Sortable="true"></PropertyColumn>
                            <PropertyColumn Property="@(p=>p.Email)" Title="Електронна пошта" Sortable="true"></PropertyColumn>
                            <PropertyColumn Property="@(p=>p.EmailConfirmed)" Title="" Sortable="true"></PropertyColumn>
                            <PropertyColumn Property="@(p=>p.Role)" Title="Дії" Sortable="true"></PropertyColumn>
                        <TemplateColumn Title="Дії">
                            <a class="btn border-2 bg-gradient" href="@(ViewUserDetails(context.Id))">Змінити</a>
                        </TemplateColumn>
                        </QuickGrid>
                        <Paginator State="paginationState"></Paginator>
                    </div>
                   
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    PaginationState paginationState = new PaginationState() { ItemsPerPage = 20 };
    [SupplyParameterFromForm(Name = "find-Users")]
    public SerchUserForm serchUserForm { get; set; } = new SerchUserForm();
    private EditContext editContext { get; set; }
    public UserViewModel User { get; set; } = new UserViewModel();

    private List<UserViewModel> users = new List<UserViewModel>();
    private List<UserViewModel> filteredUsers = new List<UserViewModel>();
    IQueryable<UserViewModel> UsersQueryble = Enumerable.Empty<UserViewModel>().AsQueryable();
    private List<string> roles = new List<string>();

    protected override async Task OnInitializedAsync()
    {

        users = (await UserService.GetAllUsersAsync()).ToList();
        filteredUsers = users;
        roles = users.Select(u => u.Role).Distinct().ToList();
        UsersQueryble = users.AsQueryable();
    }

    public void FindUsers()
    {
        filteredUsers = users.Where(u =>
            (string.IsNullOrEmpty(serchUserForm.UserName) || u.UserName.Contains(serchUserForm.UserName, StringComparison.OrdinalIgnoreCase)) &&
            (string.IsNullOrEmpty(serchUserForm.Role) || u.Role == serchUserForm.Role)
        ).ToList();
        UsersQueryble = filteredUsers.AsQueryable();

    }
    private string ViewUserDetails(Guid userId)
    {
        return $"/UserDetails/{userId}";
    }



    public class SerchUserForm
    {
        public string? UserName { get; set; } = "";
        public string? Role { get; set; } = "";
    }


}