@page "/orders/{orderId:guid}"
@using BlazorApp.Extensions.ViewModels.CatalogVMs
@using BlazorApp.Services.Interfaces
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IOrderService OrderService
@inject IPartsService PartsService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Управління замовленням</PageTitle>

<h3>Управління замовленням</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (order != null)
{
    <div>
        <p><strong>ID замовлення:</strong> @order.Id</p>
        <button class="btn btn-primary" @onclick="AddPartToOrder">Додати запчастини</button>
        
        <h4>Запчастини в замовленні</h4>
        <QuickGrid Items="@partsQueryable">
            <PropertyColumn Property="@(p => p.PartNumber)" Title="Номер деталі" Sortable="true"></PropertyColumn>
            <PropertyColumn Property="@(p => p.ManufacturerNumber)" Title="Номер виробника" Sortable="true"></PropertyColumn>
            <PropertyColumn Property="@(p => p.PartTitle)" Title="Назва деталі" Sortable="true"></PropertyColumn>
            <PropertyColumn Property="@(p => p.Description)" Title="Опис" ></PropertyColumn>
            <TemplateColumn Title="Дії">
                <button class="btn btn-danger" @onclick="() => RemovePartFromOrder(context.Id.Value)">Видалити</button>
            </TemplateColumn>
        </QuickGrid>
    </div>

}
else
{
    <p>Завантаження...</p>
}

@code {
    [Parameter]
    public Guid orderId { get; set; }

    private OrderViewModel order = new();
    private List<PartViewModel> parts;
    private string errorMessage;
    private IQueryable<PartViewModel> partsQueryable;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            order = await OrderService.GetOrderByIdAsync(orderId);


            if (order == null)
            {
                errorMessage = "Замовлення не знайдено.";
            }
            else
            {
                var partsvm = await PartsService.GetPartsByOrderIdAsync(orderId);
                if(partsvm.Count()>0){
                parts = partsvm.ToList();             
                partsQueryable = parts.AsQueryable();
                }

            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка завантаження деталей замовлення: {ex.Message}";
        }
    }

    private void AddPartToOrder()
    {
        NavigationManager.NavigateTo($"/catalog?orderId={orderId}");
    }

    private async Task RemovePartFromOrder(Guid partId)
    {
        try
        {
            await OrderService.RemovePartFromOrderAsync(orderId, partId);
            var partsvm = await PartsService.GetPartsByOrderIdAsync(orderId);
            parts = partsvm.ToList();
            partsQueryable = parts.AsQueryable();
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка видалення запчастини: {ex.Message}";
        }
    }
}
