@page "/orders/{orderId:guid}"
@using BlazorApp.Extensions.ViewModels.CatalogVMs
@using BlazorApp.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IOrderService OrderService
@inject IPartsService PartsService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [Authorize]

<PageTitle>Управління замовленням</PageTitle>

<h3>Управління замовленням</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (order != null)
{
    <div>
        <p><strong>ID замовлення:</strong> @order.Id</p>
        @if (!order.IsPaid)
        {
            <button class="btn btn-primary" @onclick="AddPartToOrder">Додати запчастини</button>
        }
        else
        {
            <p><strong>Замовлення закрите</strong></p>
        }

        <h4>Запчастини в замовленні</h4>
        @if (parts?.Any() == true)
        {
            <QuickGrid Items="@partsQueryable">
                <PropertyColumn Property="@(p => p.PartNumber)" Title="Номер деталі" Sortable="true"></PropertyColumn>
                <PropertyColumn Property="@(p => p.ManufacturerNumber)" Title="Номер виробника" Sortable="true"></PropertyColumn>
                <PropertyColumn Property="@(p => p.PartTitle)" Title="Назва деталі" Sortable="true"></PropertyColumn>
                <PropertyColumn Property="@(p => p.Description)" Title="Опис"></PropertyColumn>
                <TemplateColumn Title="Кількість">
                    <div class="d-flex align-items-center">
                        <button class="btn btn-sm btn-outline-secondary" @onclick="() => ChangeQuantity(context.Id.Value, -1)">-</button>
                        <span class="mx-2">@context.OrderedCount</span>
                        <button class="btn btn-sm btn-outline-secondary" @onclick="() => ChangeQuantity(context.Id.Value, 1)">+</button>
                    </div>
                </TemplateColumn>
                <TemplateColumn Title="Дії">
                    <button class="btn btn-danger" @onclick="() => RemovePartFromOrder(context.Id.Value)">Видалити</button>
                </TemplateColumn>
            </QuickGrid>
        }
        else
        {
            <p>Замовлення порожнє</p>
        }
    </div>
}
else
{
    <p>Завантаження...</p>
}

@code {
    [Parameter]
    public Guid orderId { get; set; }

    private OrderViewModel order = new();
    private List<PartViewModel> parts;
    private string errorMessage;
    private IQueryable<PartViewModel> partsQueryable;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            order = await OrderService.GetOrderByIdAsync(orderId);
            if (order == null)
            {
                errorMessage = "Замовлення не знайдено.";
            }
            else
            {
                await RefreshParts();
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка завантаження деталей замовлення: {ex.Message}";
        }
    }

    private void AddPartToOrder()
    {
        NavigationManager.NavigateTo($"/catalog?orderId={orderId}");
    }

    private async Task ChangeQuantity(Guid partId, int change)
    {
        try
        {
            var part = parts.FirstOrDefault(p => p.Id == partId);
            if (part != null)
            {
                int newQuantity = (part.OrderedCount ?? 1) + change;
                if (newQuantity <= 0)
                {
                    await RemovePartFromOrder(partId);
                    return;
                }

                await OrderService.AddPartToOrderAsync(orderId, partId, newQuantity);
                await RefreshParts();
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка зміни кількості: {ex.Message}";
        }
    }

    private async Task RemovePartFromOrder(Guid partId)
    {
        try
        {
            await OrderService.RemovePartFromOrderAsync(orderId, partId);
            await RefreshParts();
        }
        catch (Exception ex)
        {
            errorMessage = $"Помилка видалення запчастини: {ex.Message}";
        }
    }

    private async Task RefreshParts()
    {
        var partsvm = await OrderService.GetPartsByOrderIdAsync(orderId);
        if (partsvm?.Any() == true)
        {
            parts = partsvm.ToList();
            partsQueryable = parts.AsQueryable();
        }
        else
        {
            parts = new List<PartViewModel>();
            partsQueryable = parts.AsQueryable();
        }
        StateHasChanged();
    }
}